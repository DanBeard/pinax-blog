# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-09-05 20:54
from __future__ import unicode_literals

from django.db import migrations
from django.core.files import File


def migrate_images(apps, schema_editor):
    Image = apps.get_model("blog", "Image")
    Post = apps.get_model("blog", "Post")
    ImageSet = apps.get_model("pinax_images", "ImageSet")
    PinaxImage = apps.get_model("pinax_images", "Image")

    db_alias = schema_editor.connection.alias

    for post in Post.objects.using(db_alias).all():
        post_images = Image.objects.using(db_alias).filter(post=post)
        image_set = ImageSet.objects.using(db_alias).create(created_by=post.author)
        post.image_set = image_set
        post.save()
        for post_image in post_images:
            try:
                pinax_image = PinaxImage.objects.using(db_alias).create(
                    id=post_image.id,              # @@@ the posts reference PKs of images
                    image_set=image_set,
                    image=File(post_image.image_path, post_image.image_path.name),   # @@@ what is right way to move images?
                    created_by=post.author,
                    created_at=post_image.timestamp
                )
                if post.primary_image == post_image:
                    image_set.primary_image = pinax_image
                    image_set.save()
            except IOError:
                print("Image: {} missing. Can't migrate.".format(post_image.image_path))


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0007_post_image_set'),
        ('pinax_images', '0001_initial')
    ]

    operations = [
        migrations.RunPython(migrate_images)
    ]
